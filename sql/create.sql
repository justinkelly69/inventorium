DROP TABLE IF EXISTS IMAGES;
CREATE TABLE IMAGES (
    ID INTEGER PRIMARY KEY,
    URL VARCHAR(60) NOT NULL,
    NAME VARCHAR(20) NOT NULL,
    ORDERING INTEGER NOT NULL DEFAULT 0,
    TYPE CHAR(3)
);
DROP TABLE IF EXISTS CATEGORIES;
CREATE TABLE CATEGORIES (
    ID INTEGER PRIMARY KEY,
    PARENT INTEGER,
    TITLE VARCHAR(20) NOT NULL,
    BLURB VARCHAR(100) NULL,
    DESCRIPTION TEXT NULL,
    USER_ID INTEGER,
    CREATED TIMESTAMP,
    MODIFIED TIMESTAMP
);
DROP TABLE IF EXISTS CATEGORY_IMAGES;
CREATE TABLE CATEGORY_IMAGES (
    ID INTEGER PRIMARY KEY,
    IMAGE_ID INTEGER,
    CATEGORY_ID INTEGER,
    ORDERING INTEGER
);
DROP TABLE IF EXISTS PRODUCTS;
CREATE TABLE PRODUCTS (
    ID INTEGER PRIMARY KEY,
    SKU CHAR(20) NOT NULL,
    PARENT INTEGER NULL,
    ABSTRACT BOOLEAN NOT NULL DEFAULT FALSE,
    CUSTOMISATION BOOLEAN NOT NULL DEFAULT FALSE,
    TITLE VARCHAR(20) NOT NULL,
    BLURB VARCHAR(100) NULL,
    DESCRIPTION TEXT NULL,
    WEIGHT FLOAT NOT NULL DEFAULT 0,
    IN_STOCK INTEGER NOT NULL DEFAULT 0,
    ON_BACKORDER INTEGER NOT NULL DEFAULT 0,
    CAN_BACKORDER BOOLEAN NOT NULL DEFAULT FALSE
);
DROP TABLE IF EXISTS PRODUCT_PRICES;
CREATE TABLE PRODUCT_PRICES (
    ID INTEGER PRIMARY KEY,
    PRODUCT_ID INTEGER,
    PRICE NUMERIC(8, 2),
    QUANTITY INTEGER
);
DROP TABLE IF EXISTS PRODUCT_IMAGES;
CREATE TABLE PRODUCT_IMAGES (
    ID INTEGER PRIMARY KEY,
    IMAGE_ID INTEGER,
    PRODUCT_ID INTEGER,
    ORDERING INTEGER
);
DROP TABLE IF EXISTS PRODUCT_COMPONENTS;
CREATE TABLE PRODUCT_COMPONENTS (
    ID INTEGER PRIMARY KEY,
    PRODUCT_ID INTEGER,
    COMPONENT_ID INTEGER,
    QUANTITY INTEGER,
    ORDERING INTEGER,
    STATUS CHAR(1) -- ENUM Add|Update|Delete
);
DROP TABLE IF EXISTS COMPONENTS;
CREATE TABLE COMPONENTS (
    ID INTEGER PRIMARY KEY,
    TITLE VARCHAR(20) NOT NULL,
    BLURB VARCHAR(100) NULL,
    DESCRIPTION TEXT NULL,
    PRICE NUMERIC(8, 2) NOT NULL DEFAULT 0,
    WEIGHT FLOAT NOT NULL DEFAULT 0,
    IN_STOCK INTEGER NOT NULL DEFAULT 0
);
DROP TABLE IF EXISTS COMPONENTS_IN_STOCK;
CREATE TABLE COMPONENTS_IN_STOCK (
    ID INTEGER PRIMARY KEY,
    COMPONENT_ID INTEGER,
    PRICE NUMERIC(8, 2),
    QUANTITY INTEGER,
    ORDERING INTEGER,
);
DROP TABLE IF EXISTS COMPONENT_IMAGES;
CREATE TABLE COMPONENT_IMAGES (
    ID INTEGER PRIMARY KEY,
    IMAGE_ID INTEGER,
    COMPONENT_ID INTEGER,
    ORDERING INTEGER
);
DROP TABLE IF EXISTS BATCHES;
CREATE TABLE BATCHES (
    ID INTEGER PRIMARY KEY,
    USER_ID INTEGER NOT NULL,
    PRODUCT_ID INTEGER NOT NULL,
    TARGET_SIZE INTEGER NOT NULL DEFAULT 0,
    CURRENT_SIZE INTEGER NOT NULL DEFAULT 0,
    REJECTED_SIZE INTEGER NOT NULL DEFAULT 0,
    STATUS CHAR(1),
    STARTED_ON TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FINISHED_ON TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
DROP TABLE IF EXISTS USERS;
CREATE TABLE USERS (
    ID INTEGER PRIMARY KEY,
    EMAIL VARCHAR(60),
    PASSWORD VARCHAR(20),
    FIRST_NAME VARCHAR(20),
    MIDDLE_NAME VARCHAR(20),
    LAST_NAME VARCHAR(20),
    ROLE_ID INTEGER NOT NULL,
    STATUS CHAR(1)
);
DROP TABLE IF EXISTS USER_ROLES;
CREATE TABLE USER_ROLES (
    ID INTEGER PRIMARY KEY,
    USER_ID INTEGER,
    ROLE_ID INTEGER,
    ORDERING INTEGER
);
DROP TABLE IF EXISTS ROLES;
CREATE TABLE ROLES (
    ID INTEGER PRIMARY KEY,
    NAME CHAR(10),
    DESCRIPTION VARCHAR(20)
);
DROP TABLE IF EXISTS CUSTOMERS;
CREATE TABLE CUSTOMERS (
    ID INTEGER PRIMARY KEY,
    EMAIL VARCHAR(60),
    PASSWORD VARCHAR(20),
    FIRST_NAME VARCHAR(20),
    MIDDLE_NAME VARCHAR(20),
    LAST_NAME VARCHAR(20),
    ADDRESS1 VARCHAR(60),
    ADDRESS2 VARCHAR(60),
    CITY VARCHAR(20),
    STATE VARCHAR(20),
    COUNTRY_ID INTEGER,
    STATUS CHAR(2)
);
DROP TABLE IF EXISTS COUNTRIES;
CREATE TABLE COUNTRIES (
    ID INTEGER PRIMARY KEY,
    CODE CHAR(2),
    NAME VARCHAR(20)
);
DROP TABLE IF EXISTS ORDERS;
CREATE TABLE ORDERS (
    ID INTEGER PRIMARY KEY,
    CUSTOMER_ID INTEGER,
    ORDER_PLACED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PLATFORM INTEGER,
    ORDER_NUMBER INTEGER,
    URL VARCHAR(60),
    SHIPPING_METHOD VARCHAR(20),
    TRACKING_NUMBER VARCHAR(20),
    SHIPPING_STATUS VARCHAR(20),
    TOTAL_PRICE NUMERIC(8, 2),
    SHIPPING_PRICE NUMERIC(8, 2),
    PARTIAL CHAR(1),
    PARTS INTEGER,
    PART INTEGER,
    STATUS CHAR(1),
    REMARKS TEXT
);
DROP TABLE IF EXISTS ORDER_PRODUCTS;
CREATE TABLE ORDER_PRODUCTS (
    ID INTEGER PRIMARY KEY,
    ORDER_ID INTEGER,
    PRODUCT_ID INTEGER,
    QUANTITY INTEGER,
    PROCESSED INTEGER,
    ORDERING INTEGER
);